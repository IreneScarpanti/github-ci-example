name: Java CI with Maven on Linux

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      workdir: my-project-ci
      COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_TOKEN }}

    strategy:
      matrix:
        include:
          - java: 17
            additional-maven-args: "-Pcoveralls"
          - java: 21
            additional-maven-args: "-Pcoveralls"

    name: Build with Java ${{ matrix.java }} on Linux

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml', '**/*.yml') }}
          restore-keys: ${{ runner.os }}-m2-

      - name: Set Maven Additional Options (Only if secret and Java 17)
        if: ${{ env.COVERALLS_REPO_TOKEN != '' && matrix.java == 17 }}
        run: echo "ADDITIONAL_MAVEN_OPTIONS=-Pcoveralls" >> $GITHUB_ENV

      - name: Build with Maven
        run: mvn verify ${{ matrix.additional-maven-args }}
        working-directory: ${{ env.workdir }}
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_TOKEN }}

      - name: Generate JUnit Report
        if: ${{ always() }}
        run: mvn surefire-report:report-only
        working-directory: ${{ env.workdir }}

      - name: Jacoco
        run: mvn verify ${{ matrix.additional-maven-args }}
        working-directory: ${{ env.workdir }}
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_TOKEN }}

      - name: Archive JUnit Report
        uses: actions/upload-artifact@v4
        with:
          name: surefire-report-jdk-${{ matrix.java }}
          path: my-project-ci/target/site
